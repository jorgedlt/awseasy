# awseasy.gen

#.
#. General Commands
#.

#.  awseasy-version - Display Current Version
awseasy-version() {
  echo AWSEASY VERSION:
  cat ~/.awseasy/awseasy.ver | ccze -A
}

#.  awshelp - AWS CLI -- Help Screen
awshelp() {
  sameAs "cat ~/.awseasy/awseasy | grep '^#\.'"

echo ${CYAN}

[  $# == 0 ] && {
    cat ~/.awseasy/awseasy* | grep -v old | grep '^#\.'
    echo
    sameAs "help available on ec2 iam ver net rds asg lda vpc"
    return;
  }

[  $# == 1 ] && {
    topic=$(echo $1 | tr 'A-Z' 'a-z')
    cat ~/.awseasy/awseasy* | grep "${topic}" | grep -v old | grep '^#\.'
    return;
}

echo ${RESET}
}

#.  awsupdate - AWS CLI -- update awscli and required packages
awsupdate() {
  echo -n "${RESET}${WHITE}"
      read -r -p "Are you sure you want to update the AWS CLI environment? [y/N] " response
  echo "${RESET}"

  [[ $response =~ ^([yY][eE][sS]|[yY])$ ]] && {
      echo "${CYAN} executing command: ${GRAY} sudo apt-get -y install figlet ccze ${RESET}"
      sudo apt-get -y install figlet ccze

      echo "${CYAN} executing command: ${GRAY} sudo pip install pjson awscli --upgrade ${RESET}"
      pip install --upgrade pip
      sudo pip install pjson
      sudo pip install awscli --upgrade

      echo ${CYAN}Environment updated attempted, currently at${GREEN}
        aws --version
      echo -n ${RESET}
  } || {
    :
    echo ${CYAN}Environment not updated${GREEN}
      aws --version
    echo -n ${RESET}
  }
}

#.  lpaccounts - AWS CLI -- loops the given command in all known accounts
lpaccounts() {

      if (( $# < 1 )); then
        echo usage: Needs at least one argument { run command };
        return;
      fi;

# Scan Users Accross Accounts - depends on a valid $HOME/.aws-keys
SBDawsacnts=$(cat $HOME/.aws-keys | grep function | sed -e 's/function x/!!!/g' |
sed -n -e '/!!!/,$p' | grep -v '\-' | grep -v '!!!' |
sed -e 's/function./ /g' | tr -d ' ' | tr -d '\{' | sed '/.Stest/,$!d')
#
for i in $SBDawsacnts
do
    $i
    # usrls | grep maiolo
    $1
    echo =====================================================================

    # Scan for a given user across all known accounts
    #   usrls | grep maiolo
    # Scan and count the number S3 bucklets across all known accounts
    #   s3ls | wc -l
done
#
}


#.  lpregions - AWS CLI -- loops the given command in all known regions
lpregions() {

    if (( $# < 1 )); then
         echo usage: Needs at least one argument
         return
    fi

    awsREGIONS=$( aws ec2 describe-regions | grep RegionName | cut -d':' -f2 | tr -d ' |,|"' | sort -r | uniq );
    for thisregion in $awsREGIONS;
    do
            echo ${RESET}$thisregion;
            export AWS_DEFAULT_REGION=$thisregion;
            EventsTR=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId,State.Name,VpcId,InstanceType,PrivateIpAddress,PublicIpAddress,Tags[?Key==`Name`].Value[]]' --output json | tr -d '\n[] "');

            [ -z "$EventsTR" ] && {
                :
            } || {
                echo "  some EC2 found this region $thisregion";
                $1
                echo =====================================================================
            };
            done
17 };
}
