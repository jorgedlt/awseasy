# awseasy.lda

#.
#. AWS Lambda commands
#.

#.  lambdals - AWS lambda -- List lambda, short format
lambdals () {

LDAlist=$( aws lambda list-functions | grep 'FunctionName' | cut -d':' -f2 | grep -v '\[\]' | tr -d ' |"|:|,' );

for ldaID in $LDAlist; do
     LDAdesc=$(aws lambda get-function --function-name "${ldaID}")

       _LDAfunc=$( _ec2parse "$LDAdesc" FunctionName )
       _LDArun=$( _ec2parse "$LDAdesc" Runtime )
       _LDAdesc=$( _ec2parse "$LDAdesc" Description )
       _LDALastMod=$( _ec2parse "$LDAdesc" LastModified )
       _LDAdesc=$( _ec2parse "$LDAdesc" Runtime )
       _LDALastMod=$( _ec2parse "$LDAdesc" LastModified )
     #
      descDUMP Lambda $ldaID Name $_LDAfunc;
      descDUMP Last $_LDALastMod Desc $_LDAdesc;
      descDUMP Version $_LDArun Desc $_LDAdesc;

      echo
done
}

#.  lambdastat - AWS lambda -- Stat lambda, Long format
lambdastat () {

ldaID=$1
echo lambda $ldaID

     LDAdesc=$(aws lambda get-function --function-name "${ldaID}")

       _LDAfunc=$( _ec2parse "$LDAdesc" FunctionName )
       _LDArun=$( _ec2parse "$LDAdesc" Runtime )
       _LDAdesc=$( _ec2parse "$LDAdesc" Description )
       _LDALastMod=$( _ec2parse "$LDAdesc" LastModified )
       _LDAdesc=$( _ec2parse "$LDAdesc" Runtime )
       _LDALastMod=$( _ec2parse "$LDAdesc" LastModified )
       _LDAmemsize=$( _ec2parse "$LDAdesc" MemorySize )
       _LDAcodesize=$( _ec2parse "$LDAdesc" CodeSize )

      #
       descDUMP Lambda $ldaID Name $_LDAfunc;
       descDUMP Last $_LDALastMod Last $_LDALastMod;
       descDUMP Version $_LDArun Desc $_LDAdesc;
       descDUMP MEMsize $_LDAmemsize CodeSize $_LDAcodesize;
       echo
}

#.  lambdadump - AWS lambda -- lambda DUMP json
lambdadump () {

    if (( $# < 1 )); then
      echo usage: Needs at least one argument {RDS ID}
      return
    fi

echo LAMBDA $1

    aws lambda get-function --function-name "${ldaID}" | jq .
    echo

}

#.  lambdamake  - AWS RDS -- feature coming soon
#.  lambdakill  - AWS RDS -- feature coming soon
#.  lambdaclone - AWS RDS -- feature coming soon
