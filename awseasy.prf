# awseasy.prf

#. AWS Performance Commands
#.

#.  ec2uptime - AWS PRF -- AWS EC2 uptime
ec2uptime ()
{

datediff() {
    then=$(gdate -d "$1" +%s)
    now=$(gdate +%s)
    echo $(( (now - then) / 86400 )) days
}

    if (( $# < 1 )); then
        echo usage: Needs at least one argument {instance ID#};
      return;
    fi;

_ec2uptime=$(aws ec2 describe-instances --instance-ids $1 \
       --query 'Reservations[*].Instances[*].LaunchTime' --output text )

datediff ${_ec2uptime}
sameAs "aws ec2 describe-instances --instance-ids $1"
}

#.  ec2load - AWS PRF -- cloudwatch CPU Utilization statistics
ec2load ()
{

if (( $# < 1 )); then
    echo usage: Needs at least one argument {instance ID#};
  return;
fi;

# CPUUtilization
aws cloudwatch get-metric-statistics --namespace AWS/EC2 \
  --metric-name CPUUtilization \
  --dimensions Name=InstanceId,Value=${1} \
  --statistics Maximum \
  --start-time $(gdate -u '+%FT%TZ' -d '10 mins ago') --end-time $(gdate -u '+%FT%TZ') \
  --period 60 | jq .


  sameAs "Based on - aws cloudwatch get-metric-statistics --namespace AWS/EC2"
}

# other future commands based on these ...

# "MetricName": "DiskWriteOps"
# "MetricName": "DiskReadOps"
# "MetricName": "DiskWriteBytes"
# "MetricName": "DiskReadBytes"
# "MetricName": "NetworkIn"
# "MetricName": "CPUUtilization"
# "MetricName": "NetworkPacketsIn"
# "MetricName": "NetworkOut"
# "MetricName": "NetworkPacketsOut"
# "MetricName": "StatusCheckFailed"
# "MetricName": "StatusCheckFailed_Instance"
# "MetricName": "StatusCheckFailed_System"
